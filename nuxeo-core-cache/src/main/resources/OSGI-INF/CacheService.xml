<?xml version="1.0"?>

<component name="org.nuxeo.ecm.core.cache.CacheService">

  
  <documentation>
    Service providing a unified cache management system.
  </documentation>

  <implementation class="org.nuxeo.ecm.core.cache.CacheServiceImpl" />

  <service>
    <provide interface="org.nuxeo.ecm.core.cache.CacheService" />
  </service>


  <!-- <require>org.nuxeo.ecm.core.redis.RedisServiceImpl</require> -->


  <!-- <extension target="org.nuxeo.ecm.core.redis.RedisServiceImpl" point="configuration"> -->
  <!-- <code> -->
  <!-- <redis disabled="false"> -->
  <!-- <prefix>nuxeo:cache:</prefix> -->
  <!-- <host>localhost</host> -->
  <!-- <port>6379</port> -->
  <!-- <password>secret</password> -->
  <!-- <database>0</database> -->
  <!-- <timeout>2000</timeout> -->
  <!-- </redis> -->
  <!-- </code> -->
  <!-- </extension> -->

  <extension-point name="caches">

    <documentation>
      Extension Point to define a new cache .
      <cache name="newCache"
        class="org.nuxeo.ecm.core.cache.CacheImpl">
        <maxSize>100</maxSize>
        <ttl>20</ttl>
        <concurrency-level>true</concurrency-level>
      </cache>
      The class attribute must link a class that implements the
      CoreCache
      interface. The default implementation is based on
      Google Guava
      implementation that does not support distributed cache
      <p />
      The max size set the max number of elements contained in the cache
      <p />
      The Time To Live define in minutes the time before the cache will be
      destroyed
      <p />
      The concurrency level ...???
    </documentation>

    <object class="org.nuxeo.ecm.core.cache.CacheDescriptor" />

  </extension-point>

</component>