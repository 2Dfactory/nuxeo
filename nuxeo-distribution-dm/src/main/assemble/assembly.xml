<project name="nuxeo-assembly"
         default="build"
         xmlns:nx="urn:nuxeo-build"
         xmlns:artifact="urn:nuxeo-artifact">
  <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
  <taskdef resource="org/nuxeo/build/artifact/antlib.xml"
           uri="urn:nuxeo-artifact" />

  <target name="init">
    <artifact:nuxeo-expand />
    <artifact:print output="dependency-tree.log" />

    <property name="outdir" value="${maven.project.build.directory}" />
    <property name="stagedir" value="${outdir}/stage" />

    <nx:profile name="vcs">
      <property name="no-alternate" value="true" />
    </nx:profile>
  </target>

  <target name="build" depends="init">
    <echo>Building default Nuxeo DM EAR</echo>
    <property name="nuxeo.ear" value="${stagedir}/nuxeo.ear" />
    <mkdir dir="${nuxeo.ear}" />

    <antcall target="build-standard" />
    <delete failonerror="false" dir="${outdir}/nuxeo.ear" />
    <copy todir="${outdir}/nuxeo.ear">
      <fileset dir="${nuxeo.ear}" />
    </copy>

    <antcall target="build-distribution">
      <param name="distribution" value="derby" />
    </antcall>
    <antcall target="build-distribution">
      <param name="distribution" value="mysql" />
    </antcall>
    <antcall target="build-distribution">
      <param name="distribution" value="postgresql" />
    </antcall>
    <antcall target="build-distribution">
      <param name="distribution" value="oracle" />
    </antcall>
    <antcall target="build-distribution">
      <param name="distribution" value="h2" />
    </antcall>
    <antcall target="build-distribution">
      <param name="distribution" value="jcr" />
      <param name="storage.jcr" value="true" />
    </antcall>
    <antcall target="build-distribution">
      <param name="distribution" value="jcr-postgresql" />
      <param name="storage.jcr" value="true" />
    </antcall>

    <antcall target="clean" />
  </target>

  <target name="build-distribution"
          depends="init"
          description="Build distributions on various backends"
          unless="no-alternate">
    <delete failonerror="false" dir="${stagedir}/nuxeo-${distribution}.ear" />
    <copy todir="${stagedir}/nuxeo-${distribution}.ear" overwrite="true">
      <fileset dir="${nuxeo.ear}" />
    </copy>
    <unzip dest="${stagedir}/nuxeo-${distribution}.ear">
      <artifact:resolveFile key="org.nuxeo.ecm.platform:nuxeo-platform-ear:${maven.project.version}:zip"
                            classifier="resources-${distribution}" />
    </unzip>
    <copy todir="${stagedir}/nuxeo-${distribution}.ear" overwrite="true">
      <fileset dir="src/main/resources" />
    </copy>
    <antcall target="use-jcr-storage" />
    <nx:profile name="${distribution}">
      <delete failonerror="false" dir="${outdir}/nuxeo.ear" />
      <copy todir="${outdir}/nuxeo.ear">
        <fileset dir="${stagedir}/nuxeo-${distribution}.ear" />
      </copy>
    </nx:profile>
    <zip destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}-${distribution}.zip"
         basedir="${stagedir}/nuxeo-${distribution}.ear" />
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}-${distribution}.zip"
                     classifier="${distribution}"
                     type="zip"
                     target="${maven.project.groupId}:${maven.project.artifactId}" />
  </target>

  <target name="use-jcr-storage"
          description="Replace VCS with JCR storage"
          if="storage.jcr">
    <delete failonerror="false">
      <fileset dir="${stagedir}/nuxeo-${distribution}.ear/system">
        <include name="nuxeo-core-storage-sql*" />
      </fileset>
    </delete>
    <copy todir="${stagedir}/nuxeo-${distribution}.ear/system" overwrite="true">
      <artifact:file groupId="org.nuxeo.ecm.core" artifactId="nuxeo-core-jca" />
      <artifact:file groupId="org.nuxeo.ecm.core"
                     artifactId="nuxeo-core-jcr-connector" />
    </copy>
  </target>

  <target name="build-standard"
          description="Build default distribution"
          depends="init">
    <!-- Nuxeo resources and modules -->
    <unzip dest="${nuxeo.ear}">
      <artifact:resolveFile key="org.nuxeo.ecm.platform:nuxeo-platform-ear:${maven.project.version}:zip"
                            classifier="resources-mono" />
    </unzip>
    <copy todir="${nuxeo.ear}" overwrite="true">
      <!-- Nuxeo DM specific properties -->
      <fileset dir="src/main/resources" />
      <artifact:file artifactId="nuxeo-platform-webapp" />
      <artifact:file artifactId="nuxeo-platform-webapp-core" />
    </copy>
    <copy todir="${nuxeo.ear}/system" overwrite="true">
      <artifact:set>
        <includes>
          <artifact groupId="org.nuxeo*"
                    category="runtime,jboss4"
                    dependsOnCategory="false" />
          <artifact groupId="org.nuxeo*"
                    category="core,search,web,stateful,stateless" />
        </includes>
        <excludes>
          <artifact groupId="org.nuxeo.common" />
          <artifact artifactId="nuxeo-generic-wss-handler" />
          <artifact artifactId="nuxeo-platform-webapp" />
          <artifact artifactId="nuxeo-platform-webapp-core" />
          <artifact artifactId="nuxeo-platform-audit-facade" />
          <artifact artifactId="nuxeo-platform-placeful-facade" />
          <artifact artifactId="nuxeo-apt-extensions" />
          <artifact artifactId="nuxeo-webengine-apt" />
          <!-- exclude JCR storage -->
          <artifact artifactId="nuxeo-core-jca" />
          <artifact artifactId="nuxeo-core-jcr-connector" />
        </excludes>
      </artifact:set>
    </copy>
    <unzip dest="${nuxeo.ear}/system/nuxeo-platform-audit-facade-${nuxeo.features.version}.jar">
      <artifact:file artifactId="nuxeo-platform-audit-facade" />
    </unzip>
    <unzip dest="${nuxeo.ear}/system/nuxeo-platform-placeful-facade-${nuxeo.services.version}.jar">
      <artifact:file artifactId="nuxeo-platform-placeful-facade" />
    </unzip>

    <!-- Third-party libraries -->
    <antcall target="third-party-libraries" />
    <!-- <antcall target="old-third-party-libraries" /> -->

    <zip destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}.zip"
         basedir="${nuxeo.ear}" />
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}.zip"
                     target="${maven.project.groupId}:${maven.project.artifactId}"
                     type="zip" />
  </target>

  <target name="third-party-libraries">
    <copy todir="${nuxeo.ear}/lib" overwrite="true">
      <artifact:set>
        <includes>
          <artifact groupId="!org.nuxeo*" />
        </includes>
      </artifact:set>
    </copy>
  </target>

  <target name="clean">
    <delete dir="${stagedir}" />
  </target>

</project>
