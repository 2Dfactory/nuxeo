<project name="nuxeo-assembly"
         default="build"
         xmlns:nx="urn:nuxeo-build"
         xmlns:artifact="urn:nuxeo-artifact">
  <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
  <taskdef resource="org/nuxeo/build/artifact/antlib.xml"
           uri="urn:nuxeo-artifact" />
  <artifact:expand depth="all">
  </artifact:expand>

  <property name="outdir" value="${maven.project.build.directory}" />
  <property name="stagedir" value="${outdir}/stage" />

  <target name="build">
    <echo>Building default Nuxeo DM EAR</echo>
    <property name="nuxeo.ear" value="${stagedir}/nuxeo.ear" />
    <mkdir dir="${nuxeo.ear}" />

    <antcall target="build-standard" />
    <delete failonerror="false" dir="${outdir}/nuxeo.ear" />
    <copy todir="${outdir}/nuxeo.ear">
      <fileset dir="${nuxeo.ear}" />
    </copy>

    <nx:profile name="vcs">
      <property name="no-alternate" value="true" />
    </nx:profile>

    <antcall target="build-distribution">
      <param name="distribution" value="derby" />
    </antcall>
    <antcall target="build-distribution">
      <param name="distribution" value="mysql" />
    </antcall>
    <antcall target="build-distribution">
      <param name="distribution" value="postgresql" />
    </antcall>
    <antcall target="build-distribution">
      <param name="distribution" value="oracle" />
    </antcall>
    <antcall target="build-distribution">
      <param name="distribution" value="h2" />
    </antcall>
    <antcall target="build-distribution">
      <param name="distribution" value="jcr" />
      <param name="storage.jcr" value="true" />
    </antcall>
    <antcall target="build-distribution">
      <param name="distribution" value="jcr-postgresql" />
      <param name="storage.jcr" value="true" />
    </antcall>

    <antcall target="clean" />
  </target>

  <target name="build-distribution"
          description="Build distributions on various backends"
          unless="no-alternate">
    <delete failonerror="false" dir="${stagedir}/nuxeo-${distribution}.ear" />
    <copy todir="${stagedir}/nuxeo-${distribution}.ear" overwrite="true">
      <fileset dir="${nuxeo.ear}" />
    </copy>
    <unzip dest="${stagedir}/nuxeo-${distribution}.ear">
      <artifact:resolveFile key="org.nuxeo.ecm.platform:nuxeo-platform-ear:${maven.project.version}:zip"
                            classifier="resources-${distribution}" />
    </unzip>
    <copy todir="${stagedir}/nuxeo-${distribution}.ear" overwrite="true">
      <fileset dir="src/main/resources" />
    </copy>
    <antcall target="use-jcr-storage" />
    <nx:profile name="${distribution}">
      <delete failonerror="false" dir="${outdir}/nuxeo.ear" />
      <copy todir="${outdir}/nuxeo.ear">
        <fileset dir="${stagedir}/nuxeo-${distribution}.ear" />
      </copy>
    </nx:profile>
    <zip destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}-${distribution}.zip"
         basedir="${stagedir}/nuxeo-${distribution}.ear" />
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}-${distribution}.zip"
                     classifier="${distribution}"
                     type="zip"
                     target="${maven.project.groupId}:${maven.project.artifactId}" />
  </target>

  <target name="use-jcr-storage"
          description="Replace VCS with JCR storage"
          if="storage.jcr">
    <delete failonerror="false">
      <fileset dir="${stagedir}/nuxeo-${distribution}.ear/system">
        <include name="nuxeo-core-storage-sql*" />
      </fileset>
    </delete>
    <copy todir="${stagedir}/nuxeo-${distribution}.ear/system" overwrite="true">
      <artifact:file groupId="org.nuxeo.ecm.core" artifactId="nuxeo-core-jca" />
      <artifact:file groupId="org.nuxeo.ecm.core"
                     artifactId="nuxeo-core-jcr-connector" />
    </copy>
  </target>

  <target name="build-standard" description="Build default distribution">
    <!-- Nuxeo resources and modules -->
    <unzip dest="${nuxeo.ear}">
      <artifact:resolveFile key="org.nuxeo.ecm.platform:nuxeo-platform-ear:${maven.project.version}:zip"
                            classifier="resources-mono" />
    </unzip>
    <copy todir="${nuxeo.ear}" overwrite="true">
      <!-- Nuxeo DM specific properties -->
      <fileset dir="src/main/resources" />
      <artifact:file artifactId="nuxeo-platform-webapp" />
      <artifact:file artifactId="nuxeo-platform-webapp-core" />
    </copy>
    <copy todir="${nuxeo.ear}/system" overwrite="true">
      <artifact:set>
        <includes>
          <artifact groupId="org.nuxeo*"
                    category="runtime,jboss4"
                    dependsOnCategory="false" />
          <artifact groupId="org.nuxeo*"
                    category="core,search,web,stateful,stateless" />
        </includes>
        <excludes>
          <artifact groupId="org.nuxeo.common" />
          <artifact artifactId="nuxeo-generic-wss-handler" />
          <artifact artifactId="nuxeo-platform-webapp" />
          <artifact artifactId="nuxeo-platform-webapp-core" />
          <artifact artifactId="nuxeo-platform-audit-facade" />
          <artifact artifactId="nuxeo-platform-placeful-facade" />
          <artifact artifactId="nuxeo-apt-extensions" />
          <artifact artifactId="nuxeo-webengine-apt" />
          <!-- exclude JCR storage -->
          <artifact artifactId="nuxeo-core-jca" />
          <artifact artifactId="nuxeo-core-jcr-connector" />
        </excludes>
      </artifact:set>
    </copy>
    <unzip dest="${nuxeo.ear}/system/nuxeo-platform-audit-facade-${nuxeo.features.version}.jar">
      <artifact:file artifactId="nuxeo-platform-audit-facade" />
    </unzip>
    <unzip dest="${nuxeo.ear}/system/nuxeo-platform-placeful-facade-${nuxeo.services.version}.jar">
      <artifact:file artifactId="nuxeo-platform-placeful-facade" />
    </unzip>

    <!-- Third-party libraries -->
    <antcall target="third-party-libraries" />

    <!--
      Ideal way of retrieving third-party libraries; not usable for now,
      requires NXBT-72
    -->
    <!--
      <copy todir="${nuxeo.ear}/lib" overwrite="true"> <artifact:set> <includes>
      <artifact groupId="!org.nuxeo*" /> </includes> <excludes> <artifact
      artifactId="jackrabbit-jcr-commons" /> <artifact artifactId="stax-api" />
      <artifact artifactId="xercesImpl" /> <artifact artifactId="xmlParserAPIs"
      /> <artifact artifactId="hibernate" /> <artifact artifactId="log4j" />
      <artifact artifactId="servlet-api" /> <artifact artifactId="xml-apis" />
      <artifact artifactId="jta" /> <artifact artifactId="derby" /> <artifact
      artifactId="jackrabbit-core" /> <artifact artifactId="persistence-api" />
      <artifact artifactId="dom4j" /> <artifact groupId="org.freemarker"
      artifactId="freemarker" /> <artifact groupId="commons-lang"
      artifactId="commons-lang" /> </excludes> </artifact:set> </copy>
    -->

    <zip destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}.zip"
         basedir="${nuxeo.ear}" />
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}.zip"
                     target="${maven.project.groupId}:${maven.project.artifactId}" />
  </target>

  <target name="third-party-libraries">
    <copy todir="${nuxeo.ear}/lib" overwrite="true">
      <artifact:file groupId="org.osgi" artifactId="osgi-core" />
      <artifact:file groupId="commons-collections"
                     artifactId="commons-collections" />
      <artifact:file groupId="commons-io" artifactId="commons-io" />
      <artifact:file groupId="commons-fileupload"
                     artifactId="commons-fileupload" />
      <artifact:file groupId="commons-beanutils"
                     artifactId="commons-beanutils" />
      <artifact:file groupId="net.sourceforge.cssparser"
                     artifactId="cssparser" />
      <artifact:file groupId="net.sourceforge.nekohtml" artifactId="nekohtml" />
      <artifact:file groupId="org.w3c" artifactId="sac" />
      <artifact:file groupId="net.sf.ehcache" artifactId="ehcache" />
      <artifact:file groupId="net.sf.ezmorph" artifactId="ezmorph" />
      <artifact:file groupId="jboss" artifactId="jboss-cache-jdk50" />
      <artifact:file groupId="org.jboss.seam" artifactId="jboss-seam" />
      <artifact:file groupId="org.jboss.seam"
                     artifactId="jboss-seam-remoting" />
      <artifact:file groupId="org.jboss.seam" artifactId="jboss-seam-ui" />
      <artifact:file groupId="org.jboss.seam" artifactId="jboss-seam-mail" />
      <artifact:file groupId="org.jboss.seam" artifactId="jboss-seam-debug" />
      <artifact:file groupId="javax.el" artifactId="el-ri" />
      <artifact:file groupId="org.jboss.el" artifactId="jboss-el" />
      <artifact:file groupId="org.jbpm.jbpm3" artifactId="jbpm-jpdl" />
      <artifact:file groupId="jboss" artifactId="jgroups" />
      <artifact:file groupId="bouncycastle" artifactId="bcmail-jdk14" />
      <artifact:file groupId="bouncycastle" artifactId="bcprov-jdk14" />
      <artifact:file groupId="net.sf.json-lib" artifactId="json-lib" />
      <artifact:file groupId="org.apache.lucene" artifactId="lucene-core" />
      <artifact:file groupId="net.sf.opencsv" artifactId="opencsv" />
      <artifact:file groupId="org.codehaus.plexus" artifactId="plexus-utils" />
      <artifact:file groupId="org.slf4j" artifactId="slf4j-api" />
      <artifact:file groupId="org.slf4j" artifactId="slf4j-log4j12" />
      <artifact:file groupId="org.richfaces.framework"
                     artifactId="richfaces-api" />
      <artifact:file groupId="org.richfaces.framework"
                     artifactId="richfaces-impl" />
      <artifact:file groupId="org.richfaces.ui" artifactId="richfaces-ui" />
      <artifact:file groupId="org.apache.directory.server"
                     artifactId="apacheds-protocol-shared" />
      <artifact:file groupId="org.apache.directory.shared"
                     artifactId="shared-ldap" />
      <artifact:file groupId="com.sun.facelets" artifactId="jsf-facelets" />
      <!-- Nuxeo-WebEngine fixed libs -->
      <artifact:file groupId="org.codehaus.groovy" artifactId="groovy-all" />
      <artifact:file groupId="org.jboss.resteasy" artifactId="resteasy-jaxrs" />
      <artifact:file groupId="org.jboss.resteasy" artifactId="jaxrs-api" />
      <artifact:file groupId="javax.script" artifactId="script-api" />
      <!-- JOD / OOo libs and other converters deps-->
      <artifact:file groupId="com.artofsolving" artifactId="jodconverter" />
      <artifact:file groupId="org.openoffice" artifactId="ridl" />
      <artifact:file groupId="org.openoffice" artifactId="juh" />
      <artifact:file groupId="org.openoffice" artifactId="unoil" />
      <artifact:file groupId="org.openoffice" artifactId="jurt" />
      <artifact:file groupId="com.thoughtworks.xstream" artifactId="xstream" />
      <artifact:file groupId="pdfbox" artifactId="pdfbox" />
      <artifact:file groupId="org.fontbox" artifactId="fontbox" />
      <artifact:file groupId="org.jempbox" artifactId="jempbox" />
      <artifact:file groupId="org.restlet" artifactId="org.restlet" />
      <artifact:file groupId="org.wikimodel" artifactId="wem" />
      <artifact:file groupId="jmimemagic" artifactId="jmimemagic" />
      <artifact:file groupId="rome" artifactId="rome" />
      <artifact:file groupId="commons-jexl" artifactId="commons-jexl" />
      <artifact:file groupId="com.hp.hpl.jena" artifactId="arq" />
      <artifact:file groupId="com.noelios.restlet"
                     artifactId="com.noelios.restlet" />
      <artifact:file groupId="com.noelios.restlet"
                     artifactId="com.noelios.restlet.ext.servlet" />
      <artifact:file groupId="com.ibm.icu" artifactId="icu4j" />
      <artifact:file groupId="com.hp.hpl.jena" artifactId="iri" />
      <artifact:file groupId="cup" artifactId="java-cup" />
      <artifact:file groupId="jdom" artifactId="jdom" />
      <artifact:file groupId="com.hp.hpl.jena" artifactId="jena" />
      <artifact:file groupId="joda-time" artifactId="joda-time" />
      <artifact:file groupId="org.restlet"
                     artifactId="org.restlet.ext.fileupload" />
      <artifact:file groupId="oro" artifactId="oro" />
      <artifact:file groupId="org.apache.poi" artifactId="ooxml-schemas" />
      <artifact:file groupId="org.apache.poi" artifactId="poi" />
      <artifact:file groupId="org.apache.poi" artifactId="poi-ooxml" />
      <artifact:file groupId="org.apache.poi" artifactId="poi-scratchpad" />
      <artifact:file groupId="org.apache" artifactId="xmlbeans" />
      <artifact:file groupId="com.sun.xml" artifactId="relaxngDatatype" />
      <artifact:file groupId="com.sun.xml" artifactId="xsom" />

      <!-- Remote publication lib -->
      <artifact:file groupId="org.apache.httpcomponents"
                     artifactId="httpclient" />
      <artifact:file groupId="org.apache.httpcomponents"
                     artifactId="httpcore" />

      <artifact:file groupId="com.google.collections"
                     artifactId="google-collections" />
      <artifact:file groupId="com.google.gwt" artifactId="gwt-servlet" />
      <artifact:file groupId="backport-util-concurrent"
                     artifactId="backport-util-concurrent" />
    </copy>
  </target>

  <target name="clean">
    <delete dir="${stagedir}" />
  </target>

</project>
