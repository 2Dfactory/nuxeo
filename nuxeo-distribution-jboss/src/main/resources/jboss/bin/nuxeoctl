#!/bin/sh
#####
#
# Nuxeo startup script
# Inspired/copied from RedHat JBoss's run.sh and Apache Tomcat's catalina.sh
#
#####

# Helper functions

warn() {
	echo "WARNING: $*"
}

die() {
	echo "ERROR: $*"
	exit 1
}


# OS detection

cygwin=false
darwin=false
linux=false

case "`uname`" in
	CYGWIN*) cygwin=true;;
	Darwin*) darwin=true;;
	Linux) linux=true;;
esac


# Get dirname and progname

PRG="$0"

# follow symlinks
while [ -h "$PRG" ]; do
	ls=`ls -ld "$PRG"`
	link=`expr "$ls" : '.$->\(.*\)$'`
	if expr "$link" : '/.*' > /dev/null; then
		PRG="$link"
	else
		PRG=`dirname "$PRG"`/"$link"
	fi
done

DIRNAME=`dirname "$PRG"`
PROGNAME=`basename "$PRG"`


# Read nuxeo.conf

if [ "x$NUXEO_CONF" = "x" ]; then
	NUXEO_CONF="$DIRNAME/nuxeo.conf"
fi
if [ -r "$NUXEO_CONF" ]; then
	. "$NUXEO_CONF"
fi


# For Cygwin, ensure paths are in UNIX format before anything is touched

if [ "$cygwin" = "true" ]; then
	[ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
	[ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
	[ -n "$JBOSS_HOME" ] && JBOSS_HOME=`cygpath --unix "$JBOSS_HOME"`
	[ -n "$CATALINA_HOME" ] && CATALINA_HOME=`cygpath --unix "$CATALINA_HOME"`
	[ -n "$JETTY_HOME" ] && JETTY_HOME=`cygpath --unix "$JETTY_HOME"`
	[ -n "$NUXEO_HOME" ] && NUXEO_HOME=`cygpath --unix "$JBOSS_HOME"`
fi


# Setup the JVM

if [ "x$JAVA" = "x" ]; then
    if [ "x$JAVA_HOME" != "x" ]; then
        JAVA="$JAVA_HOME/bin/java"
    else
        JAVA="java"
    fi
fi



# Setup NUXEO_HOME

if [ "x$NUXEO_HOME" = "x" ]; then
	if [ -n "$JBOSS_HOME" ]; then NUXEO_HOME=$JBOSS_HOME
	elif [ -n "$CATALINA_HOME" ]; then NUXEO_HOME=$CATALINA_HOME
	elif [ -n "$JETTY_HOME" ]; then NUXEO_HOME=$JETTY_HOME
	else NUXEO_HOME=`cd $DIRNAME/..; pwd`
	fi
fi


# Where possible, increase the maximum number of file descriptors

if [ "$cygwin" = "false" ]; then
	MAX_FD_LIMIT=`ulimit -H -n`
	if [ $? -eq 0 ]; then
		ulimit -n $MAX_FD_LIMIT
		if [ $? -ne 0 ]; then
			warn "Could not set maximum file descriptior limit: $MAX_FD_LIMIT"
		fi
	else
		warn "Could not get system maximum file descriptor limit: $MAX_FD_LIMIT"
	fi
fi


# Force IPv4

JAVA_OPTS="$JAVA_OPTS -Djava.net.preferIPv4Stack=true"


# If -server not set in JAVA_OPTS, set it, if supported

SERVER_SET=`echo $JAVA_OPTS | grep "\-server"`
if [ "x$SERVER_SET" = "x" ]; then
	# Check for SUN(tm) JVM w/ HotSpot support
	if [ "x$HAS_HOTSPOT" = "x" ]; then
		HAS_HOTSPOT=`"$JAVA" -version 2>&1 | grep -i HotSpot`
	fi
	# Enable -server if we have Hotspot, unless we can't
	if [ "x$HAS_HOTSPOT" != "x" ]; then
		# MacOS does not support -server flag
		if [ "$darwin" != "true" ]; then
			JAVA_OPTS="-server $JAVA_OPTS"
		fi
	fi
fi


# Application server detection
# We're checking for the presence of the jars used to start each server

jboss=false
tomcat=false
jetty=false

jbossjar="$NUXEO_HOME/bin/run.jar"
tomcatjar="$NUXEO_HOME/bin/bootstrap.jar"
jettyjar="`ls $NUXEO_HOME/nuxeo-runtime-launcher*.jar 2>/dev/null || echo null`"

if [ -f $jbossjar ]; then jboss=true
elif [ -f $tomcatjar ]; then tomcat=true
elif [ "$jettyjar" != "null" ]; then jetty=true
else die "Could not find startup jars for either JBoss, Tomcat or Jetty in $NUXEO_HOME"
fi


# Application server-specific stuff
# Those won't work with cygwin without transforming them back first, need to rethink this part

#
# JBOSS
#

if [ "$jboss" = "true" ]; then

	# Fix JRE 1.5/1.6 issue with script-api.jar
	IS_JRE_6=`"$JAVA" -version 2>&1|grep "version \"1\.6"`
	NUXEO_EAR="$NUXEO_HOME/server/default/deploy/nuxeo.ear"
	if [ ! -z "$IS_JRE_6" ]; then
		#echo "Java 1.6 detected"
		NXSCRIPT_API=`ls $NUXEO_EAR/lib/script-api*.jar 2>/dev/null || echo "null"`
		if [ -f "$NXSCRIPT_API" ]; then
			echo "Moving scripting API out of classpath (already provided by Java6)"
			mkdir "$NUXEO_EAR/lib-jre1.5/" 2>/dev/null
			mv "$NXSCRIPT_API" "$NUXEO_EAR/lib-jre1.5/"
		fi
	else
		#echo "Assumed Java 1.5"
		NXSCRIPT_API=`ls $NUXEO_EAR/lib/script-api*.jar 2>/dev/null || echo "null"`
		if [ ! -f "$NXSCRIPT_API" ]; then
			echo "Moving scripting API into classpath"
			mv "$NUXEO_EAR"/lib-jre1.5/script-api*.jar "$NUXEO_EAR/lib/" 2>/dev/null || \
			echo "Missing scripting API in $NUXEO_EAR/lib/" >&2
		fi
	fi

	# Paths and specific options
	NUXEO_CLASSPATH="$CLASSPATH:$jbossjar"
	NUXEO_ENDORSED="$NUXEO_HOME/lib/endorsed"
	if [ "$cygwin" = "true" ]; then
		NUXEO_CLASSPATH=`cygpath --path --windows "$NUXEO_CLASSPATH"`
		NUXEO_ENDORSED=`cygpath --absolute --windows "$NUXEO_ENDORSED"`
		NUXEO_HOME=`cygpath --absolute --windows "$NUXEO_HOME"`
		NUXEO_CONF=`cygpath --absolute --windows "$NUXEO_CONF"`
	fi
	CMD_START="$JAVA $JAVA_OPTS -classpath $NUXEO_CLASSPATH -Dprogram.name=nuxeoctl -Djava.endorsed.dirs=$NUXEO_ENDORSED -Dnuxeo.home=$NUXEO_HOME -Dnuxeo.conf=$NUXEO_CONF org.jboss.Main"

#
# TOMCAT
#

elif [ "$tomcat" = "true" ]; then

	# Paths and specific options
	NUXEO_CLASSPATH="$CLASSPATH:$tomcatjar"
	LOGGING_PROPERTIES="$NUXEO_HOME/conf/logging.properties"
	CATALINA_TEMP="$NUXEO_HOME/temp"
	if [ "$cygwin" = "true" ]; then
		NUXEO_CLASSPATH=`cygpath --path --windows "$NUXEO_CLASSPATH"`
		LOGGING_PROPERTIES=`cygpath --absolute --windows "$LOGGING_PROPERTIES"`
		CATALINA_TEMP==`cygpath --absolute --windows "$CATALINA_TEMP"`
		NUXEO_HOME=`cygpath --absolute --windows "$NUXEO_HOME"`
		NUXEO_CONF=`cygpath --absolute --windows "$NUXEO_CONF"`
	fi
	CMD_START="$JAVA $JAVA_OPTS -classpath $NUXEO_CLASSPATH -Dnuxeo.home=$NUXEO_HOME -Dnuxeo.conf=$NUXEO_CONF -Djava.util.logging.config.file=$LOGGING_PROPERTIES -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Dcatalina.base=$NUXEO_HOME -Dcatalina.home=$NUXEO_HOME -Djava.io.tmpdir=$CATALINA_TEMP org.apache.catalina.startup.Bootstrap start"

#
# JETTY
#

elif [ "$jetty" = "true" ]; then

	# Paths and specific options
	NXC_VERSION=`basename $jettyjar | cut -d"-" -f4-`
	NUXEO_CLASSPATH="$CLASSPATH:$jettyjar"
	NUXEO_BUNDLES="$NUXEO_HOME/bundles/.:$NUXEO_HOME/lib/.:$NUXEO_HOME/config"
	JAVA_OPTS="$JAVA_OPTS -Djava.rmi.server.RMIClassLoaderSpi=org.nuxeo.runtime.launcher.NuxeoRMIClassLoader"
	JAVA_OPTS="$JAVA_OPTS -Dsun.lang.ClassLoader.allowArraySyntax=true"
	JAVA_OPTS="$JAVA_OPTS -Dderby.system.home=data/derby"
	JAVA_OPTS="$JAVA_OPTS -Dorg.nuxeo.launcher.libdirs=lib"
	if [ "$cygwin" = "true" ]; then
		NUXEO_CLASSPATH=`cygpath --path --windows "$NUXEO_CLASSPATH"`
		NUXEO_BUNDLES=`cygpath --path --windows "$NUXEO_BUNDLES"`
		NUXEO_HOME=`cygpath --absolute --windows "$NUXEO_HOME"`
		NUXEO_CONF=`cygpath --absolute --windows "$NUXEO_CONF"`
	fi
	CMD_START="$JAVA $JAVA_OPTS -classpath $NUXEO_CLASSPATH -Dnuxeo.home=$NUXEO_HOME -Dnuxeo.conf=$NUXEO_CONF -jar $jettyjar $NUXEO_HOME/bundles/nuxeo-runtime-osgi-${NXC_VERSION}/org.nuxeo.osgi.application.Main $NUXEO_BUNDLES -home $NUXEO_HOME"

#
# Oops
#

else
	die "Oops, something went very wrong, I'm not supposed to be here !"
fi

echo "Using command: $CMD_START"
echo
$CMD_START

