; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Nuxeo DM 5.3.1"
#define MyAppVerName "Nuxeo DM 5.3.1"
#define MyAppPublisher "Nuxeo"
#define MyAppURL "http://www.nuxeo.com"
#define JDKREG "SOFTWARE\JavaSoft\Java Development Kit"

[Setup]
AppName={#MyAppName}
AppVerName={#MyAppVerName}
AppPublisher={#MyAppPublisher}
AppCopyright=Copyright © 2000-2008 Nuxeo. Tous droits réservés.
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={sd}\NuxeoDM-5.3
DefaultGroupName={#MyAppName}
AllowNoIcons=true
LicenseFile=C:\workspace\tools\win32installer\licence\LGPL.txt
InfoBeforeFile=C:\workspace\tools\win32installer\licence\before.txt
InfoAfterFile=C:\workspace\tools\win32installer\licence\after.txt
WizardImageFile=C:\workspace\tools\win32installer\images\nuxeo-banner.bmp
WizardSmallImageFile=C:\workspace\tools\win32installer\images\logo.bmp
WizardImageBackColor=$ffffff
WizardImageStretch=false
OutputBaseFilename=nuxeo-dm-5.3.1_64-setup
Compression=lzma
SolidCompression=true
ArchitecturesInstallIn64BitMode=x64 ia64


[Languages]
Name: english; MessagesFile: compiler:Default.isl

[Types]
Name: full; Description: Full installation
Name: compact; Description: Nuxeo Server only
Name: custom; Description: Custom installation; Flags: iscustom

[Components]
Name: server; Description: Nuxeo Server (JBoss); Types: full compact custom
Name: nxshell; Description: Nuxeo Shell; Types: full custom
Name: service; Description: Integration as a Windows Service; Types: full custom

[Tasks]
Name: reserveports; Description: Reserve ports needed by Nuxeo Server; GroupDescription: Server Setup; Components: server

[Files]
Source: C:\workspace\tools\win32installer\jboss\*; DestDir: {app}; Flags: ignoreversion recursesubdirs createallsubdirs; Components: server; AfterInstall : reservePorts
Source: C:\workspace\tools\win32installer\nxshell\*; DestDir: {app}; Flags: ignoreversion recursesubdirs createallsubdirs; Components: nxshell
; Source: C:\workspace\tools\win32installer\service\JBossService.exe; DestDir: {app}\NuxeoServer\bin\; Flags: ignoreversion recursesubdirs createallsubdirs; Components: service; AfterInstall: setupService
; Source: C:\workspace\tools\win32installer\service\UnInstallService.bat; DestDir: {app}\NuxeoServer\bin\; Flags: ignoreversion recursesubdirs createallsubdirs; Components: service
; Source: C:\workspace\tools\win32installer\service\startService.bat; DestDir: {app}\NuxeoServer\bin\; Flags: ignoreversion recursesubdirs createallsubdirs; Components: service
; Source: C:\workspace\tools\win32installer\service\stopService.bat; DestDir: {app}\NuxeoServer\bin\; Flags: ignoreversion recursesubdirs createallsubdirs; Components: service
Source: C:\workspace\tools\win32installer\jboss-native-2.0.4\bin\*; DestDir: {app}\NuxeoServer\bin\; Flags: ignoreversion recursesubdirs createallsubdirs; Components: service
Source: C:\workspace\tools\win32installer\icon\nuxeo5.ico; DestDir: {app}\; Flags: ignoreversion recursesubdirs createallsubdirs

[Icons]
Name: {group}\{cm:ProgramOnTheWeb,{#MyAppName}}; Filename: {#MyAppURL}
Name: {group}\Nuxeo Shell; Filename: {app}\NuxeoShell\run.cmd; WorkingDir: {app}\NuxeoShell\; IconFilename: {app}\nuxeo5.ico
Name: {group}\Start Nuxeo Server (console mode); Filename: {app}\NuxeoServer\bin\run.bat; WorkingDir: {app}\NuxeoServer\; IconFilename: {app}\nuxeo5.ico
Name: {group}\Start Nuxeo Service; Filename: {app}\NuxeoServer\bin\service.bat; IconFilename: {app}\nuxeo5.ico
Name: {group}\Stop Nuxeo Service; Filename: {app}\NuxeoServer\bin\service.bat; IconFilename: {app}\nuxeo5.ico
Name: {group}\Open Nuxeo Login page; Filename: http://127.0.0.1:8080/nuxeo/
Name: {group}\{cm:UninstallProgram,{#MyAppName}}; Filename: {uninstallexe}

[Code]
var javaVersion: String;
var isJDK: Boolean;
var JavaHome: String;

function needServiceSetup(): Boolean;
begin
  if IsComponentSelected('service') then begin
	Result := True;
  end
  else begin
    Result := False;
  end;
end;


function hasAdminRights(): Boolean;
begin
  if IsAdminLoggedOn() then begin
	Result := True;
  end
  else begin
    if IsPowerUserLoggedOn() then
    begin
      Result := True;
    end
    else
    begin
      Result := False;
    end
  end;
end;

procedure reservePorts();
begin
  if IsTaskSelected('reserveports') then
  begin
    if hasAdminRights() then
      begin
      if not RegKeyExists(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\ReservedPorts') then
        begin

        end
      RegWriteMultiStringValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Services\Tcpip\Parameters',
       'ReservedPorts', '1098-1099' + #0 + + '8080-8080' + #0 + '3233-3233'+ #0 + '62474-62474'+ #0 + '3873-3873'+ #0 + '4444-4445'+ #0 + '8093-8093');
      end
    else
      begin
      MsgBox('You need administration right to do the port reservation', mbInformation, MB_OK);
      end
  end;
end;

procedure setupService();
var jvmDll: String;
var jbossService: String;
var tools: String;
var jbossjar: String;
var cmd: String;
var cmdParams: String;
var cmdDir: String;
var jbossHome: String;
var regCode: Integer;
var regSuccess: Boolean;
begin
  if hasAdminRights() then
  begin
	  if (isJDK) then
		begin
		  jvmDll:=JavaHome + '\jre\bin\client\jvm.dll';
		  tools:=JavaHome + 'lib\tools.jar';
		end
	  else
		begin
		  jvmDll:=JavaHome + '\bin\client\jvm.dll';
		  tools:='';
		end;
	  jbossHome:=ExpandConstant('{app}\NuxeoServer\');
	  jbossService:= jbossHome + 'bin\service.bat';
	  jbossjar:=ExpandConstant('{app}\NuxeoServer\bin\run.jar');

	  cmd:=jbossService
	  cmdDir:=jbossHome + 'bin\';
	  cmdParams:=' install';
	  regSuccess:=Exec(cmd, cmdParams, cmdDir, SW_SHOW,ewWaitUntilTerminated, regCode);
	  if regSuccess then
		begin
		  MsgBox('Service successfully registred', mbInformation, MB_OK);
		end
	  else
		begin
		  MsgBox('Error ' + SysErrorMessage(regCode), mbInformation, MB_OK);
		end
	end
	else
		begin
			  MsgBox('You need administration right to perform service installation', mbInformation, MB_OK);
		end
end;

function setupEnvVars(): Boolean;
var javaHomeEnvVar :String;
var sysPath :String;
var javaBinPath :String;
var idx : Integer;
begin
  javaHomeEnvVar:=JavaHome;
  if RegQueryStringValue(HKEY_CURRENT_USER, 'Environment','JavaHome', javaHomeEnvVar) then
    begin
      if (javaHomeEnvVar=JavaHome) then
        begin
        Result :=True;
        end
      else
        begin
        MsgBox('Warning: javaHome point to ' + javaHomeEnvVar + ' instead of ' + JavaHome, mbInformation, MB_OK);
        Result :=False;
        end;
    end
  else
    begin
    Result :=RegWriteStringValue(HKEY_CURRENT_USER, 'Environment','JavaHome', JavaHome);
    end
  javaBinPath:=JavaHome + '\bin';
  if hasAdminRights() then
  begin
	  if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment','Path', sysPath) then
		begin
		  idx:=Pos(javaBinPath,sysPath);
		  if (idx=0) then
			begin
			sysPath:=sysPath + ';' + javaBinPath;
			RegWriteExpandStringValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment','Path', sysPath);
			if (needServiceSetup) then
				begin
				MsgBox('System Enviroment variable Path has been updated to include Java bin directory, you may need to restart to be able to run Nuxeo5 as service', mbInformation, MB_OK);
				end
			end
		end
	  else
		begin
		RegWriteExpandStringValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment','Path', javaBinPath);
		end
	end
	else
		begin
		   MsgBox('Because you do not have administration rights, the system path was not updated', mbInformation, MB_OK);
		end

end;

function getJavaVersion(): String;
begin
  if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\JavaSoft\Java Development Kit','CurrentVersion', javaVersion) then
  begin
    isJDK:=True;
    RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\JavaSoft\Java Development Kit\'+javaVersion,'JavaHome', JavaHome)
    Result :=javaVersion;
  end
  else
  begin
    if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\JavaSoft\Java Runtime Environment','CurrentVersion', javaVersion) then
    begin
      RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\JavaSoft\Java Runtime Environment\'+javaVersion,'JavaHome', JavaHome)
      MsgBox('You only have a JRE installed, not a full JDK, setup will continue, but if you experience problems please setup a complete JDK', mbInformation, MB_OK);
      Result :=javaVersion;
    end
    else
    begin
      Result :='0';
    end
  end;
end;

function isJavaVersionOK(): Boolean;
var jv :String;
begin
  jv := getJavaVersion();
  setupEnvVars();
  if (CompareText('1.5', jv)=0) then begin
    Result:=True;
  end
  else if (CompareText('1.6', jv)=0) then begin
    Result :=True;
  end
  else begin
    MsgBox('Can not find a suitable version of Java, Nuxeo5 needs JDK version 1.5, setup will exit', mbInformation, MB_OK);
    Result :=False;
  end;
end;


function InitializeSetup(): Boolean;
begin
  Result :=isJavaVersionOK();
end;

function InitializeUninstall(): Boolean;
var jbossService: String;
var cmd: String;
var cmdParams: String;
var cmdDir: String;
var jbossHome: String;
var regCode: Integer;
var regSuccess: Boolean;
begin
  jbossHome:=ExpandConstant('{app}\NuxeoServer\');
  jbossService:= jbossHome + 'bin\service.bat';
  cmd:=jbossService
  cmdDir:=jbossHome + 'bin\';
  cmdParams:=' uninstall';
  regSuccess:=Exec(cmd, cmdParams, cmdDir, SW_SHOW,ewWaitUntilTerminated, regCode);
  Result :=True;
end;
