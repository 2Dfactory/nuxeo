<project name="nuxeo-assembly"
         default="build"
         xmlns:nx="urn:nuxeo-build"
         xmlns:artifact="urn:nuxeo-artifact">
  <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
  <taskdef resource="org/nuxeo/build/artifact/antlib.xml"
           uri="urn:nuxeo-artifact" />
  <artifact:expand depth="2" />

  <property name="outdir" value="${maven.project.build.directory}" />
  <property name="stagedir" value="${outdir}/stage" />
  <property name="tomcat" value="${stagedir}/nuxeo-distribution-tomcat" />
  <property name="nxserver" value="${tomcat}/nxserver" />

  <target name="build" >
    <echo>Building Tomcat standard distribution...</echo>
    <antcall target="prepare-tomcat" />
    
    <!-- Extract Nuxeo webapp -->
    <unzip dest="${tomcat}">
      <artifact:resolveFile key="org.nuxeo.ecm.distribution:nuxeo-distribution-jetty:${nuxeo.dm.version}:zip"
                            classifier="nuxeo-dm" />
      <patternset>
        <exclude name="**/nxserver*.*" />
        <exclude name="**/readme.html" />
      </patternset>
    </unzip>
    <nx:rename from="${tomcat}/nuxeo-*" to="${nxserver}" />
    
    <!-- Custom resources -->
    <copy todir="${tomcat}" overwrite="true">
      <fileset dir="src/main/resources" />
    </copy>
    <delete>
      <fileset dir="${nxserver}/config" includes="webbindings-config.xml" />
      <fileset dir="${nxserver}/config" includes="jetty.xml" />
      <fileset dir="${nxserver}/config" includes="default-web.xml" />
    </delete>

    <antcall target="third-party-libraries" />

    <zip destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}-${distribution}.zip"
         basedir="${stagedir}" />
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}-${distribution}.zip"
                     classifier="${distribution}"
                     type="zip"
                     target="${maven.project.groupId}:${maven.project.artifactId}" />
    
    <echo>Setting transaction management and pooling support...</echo>
    <antcall target="set-jtajca" />
    <zip destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}-${distribution}-jtajca.zip"
         basedir="${stagedir}" />
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}-${distribution}-jtajca.zip"
                     classifier="${distribution}-jtajca"
                     type="zip"
                     target="${maven.project.groupId}:${maven.project.artifactId}" />
    
    <echo>Preparing Nuxeo Chemistry...</echo>
    <antcall target="set-cmis" />
    <zip destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}-cmis.zip"
         basedir="${stagedir}" />
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}-cmis.zip"
                     classifier="cmis"
                     type="zip"
                     target="${maven.project.groupId}:${maven.project.artifactId}" />
  </target>
  
  <target name="set-jtajca">
    <!-- no more specific resources needed for now
    <copy todir="${tomcat}" overwrite="true">
      <fileset dir="src/main/resources-jtajca" />
    </copy>
    -->

    <copy todir="${nxserver}/lib">
      <artifact:resolveFile key="org.apache.geronimo.components:geronimo-connector" />
      <artifact:resolveFile key="org.apache.geronimo.components:geronimo-transaction" />
      <artifact:resolveFile key="org.objectweb.howl:howl" />
    </copy>
    <copy todir="${nxserver}/bundles">
      <artifact:file groupId="org.nuxeo.runtime"
                     artifactId="nuxeo-runtime-jtajca" />
      <artifact:file groupId="org.nuxeo.ecm.core"
                     artifactId="nuxeo-core-storage-sql-ra"
                     type="jar" />
    </copy>
    <replace file="${nxserver}/config/default-repository-config.xml">
      <replacetoken>factory="org.nuxeo.ecm.core.storage.sql.coremodel.SQLRepositoryFactory"</replacetoken>
      <replacevalue>factory="org.nuxeo.ecm.core.storage.sql.PoolingRepositoryFactory"</replacevalue>
    </replace>
    <replace file="${tomcat}/conf/Catalina/localhost/nuxeo.xml">
      <replacetoken><![CDATA[</Context>]]></replacetoken>
      <replacevalue><![CDATA[
      <Resource name="TransactionManager" auth="Container"
      type="javax.transaction.TransactionManager"
      factory="org.nuxeo.runtime.jtajca.NuxeoTransactionManagerFactory"
      transactionTimeoutSeconds="300"/>
      <Transaction factory="org.nuxeo.runtime.jtajca.NuxeoUserTransactionFactory"/>
      <Resource name="NuxeoConnectionManager" auth="Container"
      type="javax.resource.spi.ConnectionManager"
      factory="org.nuxeo.runtime.jtajca.NuxeoConnectionManagerFactory"
      minPoolSize="0" maxPoolSize="20" idleTimeoutMinutes="0"/>
      </Context>
      ]]></replacevalue>
      </replace>
  </target>
  
  <target name="set-cmis">
    <!-- Custom resources -->
    <copy todir="${tomcat}" overwrite="true">
      <fileset dir="src/main/resources-cmis" />
    </copy>
    
    <!-- Add CMIS bundles and dependent libraries -->
    <copy todir="${nxserver}/bundles">
      <artifact:resolveFile key="org.nuxeo.ecm.core:nuxeo-chemistry-impl" />
      <artifact:resolveFile key="org.nuxeo.ecm.core:nuxeo-chemistry-bindings" />
      <artifact:resolveFile key="org.nuxeo.ecm.webengine:nuxeo-webengine-core" />
    </copy>
    <delete>
      <fileset dir="${nxserver}/bundles" includes="nuxeo-opensocial*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-annotations*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-audit*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-comment*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-forum*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-imaging*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-jbpm*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-publisher*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-tag*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-userworkspace*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-virtualnavigation*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-runtime-management*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-spaces*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-theme-jsf*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-theme-html*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-webengine-blogs*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-${maven.project.version}*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-actions-core*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-forms-layout*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-mail*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-notification*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-placeful*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-preview*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-syndication*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-ui-*" excludes="nuxeo-platform-ui-api*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-uidgen*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-url*" excludes="nuxeo-platform-url-api*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-platform-webapp*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-webengine-*" excludes="nuxeo-webengine-core*,nuxeo-webengine-base*,nuxeo-webengine-admin*" />
      <fileset dir="${nxserver}/config" includes="commentService-config-bundle.xml" />
      <fileset dir="${nxserver}/OSGI-INF/templates" includes="faces-config.xml" />
      <fileset dir="${nxserver}/OSGI-INF/templates" includes="pages.xml" />
      <fileset dir="${nxserver}/OSGI-INF/templates" includes="components.xml" />
      <!-- Try to reduce total size -->
      <fileset dir="${nxserver}/lib" includes="ooxml-schemas*" />
      <fileset dir="${nxserver}/lib" includes="richfaces*" />
      <fileset dir="${nxserver}/lib" includes="gwt*" />
    </delete>
    <copy todir="${nxserver}/lib">
      <artifact:resolveFile key="org.apache.chemistry:chemistry-api" />
      <artifact:resolveFile key="org.apache.chemistry:chemistry-commons" />
      <artifact:resolveFile key="org.apache.chemistry:chemistry-atompub" />
      <artifact:resolveFile key="org.apache.chemistry:chemistry-atompub-server" />
      <artifact:resolveFile key="org.apache.chemistry:chemistry-ws" />
      <artifact:resolveFile key="org.apache.chemistry:chemistry-soap-server" />
      <artifact:resolveFile key="org.antlr:antlr-runtime" />
      <artifact:resolveFile key="org.apache.abdera:abdera-core" />
      <artifact:resolveFile key="org.apache.abdera:abdera-i18n" />
      <artifact:resolveFile key="org.apache.abdera:abdera-parser" />
      <artifact:resolveFile key="org.apache.abdera:abdera-server" />
      <artifact:resolveFile key="org.apache.ws.commons.axiom:axiom-api" />
      <artifact:resolveFile key="org.apache.ws.commons.axiom:axiom-impl" />
      <artifact:resolveFile key="jaxen:jaxen" />
    </copy>

    <replace file="${nxserver}/config/default-repository-config.xml">
      <replacetoken><![CDATA[<indexing>]]></replacetoken>
      <replacevalue><![CDATA[<indexing>
          <queryMaker class="org.nuxeo.ecm.core.storage.sql.NXQLQueryMaker" />
          <queryMaker class="org.nuxeo.ecm.core.chemistry.impl.CMISQLQueryMaker" />
]]></replacevalue>
    </replace>
  </target>
  
  <target name="prepare-tomcat">
    <mkdir dir="${stagedir}" />
    <!-- Extract Tomcat -->
    <unzip dest="${stagedir}">
      <artifact:resolveFile key="org.apache.tomcat:apache-tomcat:6.0.20:zip" />
    </unzip>
    <nx:rename from="${stagedir}/apache-tomcat*" to="${tomcat}" />
    <!-- patch catalina.sh to add custom JAVA properties -->
    <replace file="${tomcat}/bin/catalina.sh">
      <replacetoken><![CDATA[#!/bin/sh]]></replacetoken>
      <replacevalue><![CDATA[#!/bin/sh
JAVA_OPTS="$JAVA_OPTS -Xms128m -Xmx512m -XX:MaxPermSize=256m -Dfile.encoding=UTF-8"
]]></replacevalue>
    </replace>
    <replace file="${tomcat}/bin/catalina.bat">
      <replacetoken><![CDATA[@echo off]]></replacetoken>
      <replacevalue><![CDATA[@echo off
set JAVA_OPTS=%JAVA_OPTS% -Xms128m -Xmx512m -XX:MaxPermSize=256m -Dfile.encoding=UTF-8
]]></replacevalue>
    </replace>
    <chmod dir="${tomcat}/bin" perm="750" includes="*.sh" />
  </target>

  <target name="third-party-libraries">
    <!-- Cleanup and reorganize libraries -->
    <delete>
      <fileset dir="${nxserver}" includes="nuxeo-runtime-launcher-*" />
      <fileset dir="${nxserver}/bundles" includes="nuxeo-runtime-jetty-*" />
      <!--fileset dir="${nxserver}/bundles" includes="nuxeo-runtime-deploy-*" /-->
      <!--fileset dir="${nxserver}/bundles" includes="nuxeo-platform-virtualnavigation-*" /-->
      <fileset dir="${nxserver}/lib" includes="core-*" />
      <!-- jetty-util is needed by jsp impl jar - whic is referring jetty log classes -->
      <fileset dir="${nxserver}/lib"
               includes="jetty-*"
               excludes="jetty-util*" />
      <fileset dir="${nxserver}/lib" includes="jsp-api*" />
      <fileset dir="${nxserver}/lib" includes="servlet-api-*" />
      <fileset dir="${nxserver}/lib" includes="el-api*" />
      <fileset dir="${nxserver}/lib" includes="jsp-*" />
      <fileset dir="${nxserver}/lib" includes="gwt-servlet*" />
    </delete>
    <!-- we need el-ri impl in lib - why this is not part of jetty distrib? -->
    <copy todir="${nxserver}/lib">
      <artifact:resolveFile key="com.google.gwt:gwt-servlet:1.7.0:jar" />
      <artifact:resolveFile key="jstl:jstl:1.1.2:jar" />
      <artifact:resolveFile key="javax.el:el-ri:unknown:jar" />
    </copy>

    <copy todir="${tomcat}/lib">
      <artifact:resolveFile key="org.nuxeo.runtime:nuxeo-runtime-tomcat-adapter:${nuxeo.runtime.version}:jar" />
    </copy>
    <!-- we need to move DS related jars into tomcat lib (after running the processing if we do so) -->
    <move todir="${tomcat}/lib">
      <fileset dir="${nxserver}/lib" includes="derby-*" />
      <fileset dir="${nxserver}/lib" includes="h2-*" />
      <fileset dir="${nxserver}/lib" includes="log4j-*" />
      <fileset dir="${nxserver}/lib" includes="lucene-*" />
      <fileset dir="${nxserver}/lib" includes="commons-logging-*" />
      <fileset dir="${nxserver}/lib" includes="commons-lang-*" />
      <fileset dir="${nxserver}/lib" includes="freemarker-*" />
      <fileset dir="${nxserver}/bundles"
               includes="nuxeo-core-storage-sql-extensions-*" />
      <fileset dir="${nxserver}/bundles"
               includes="nuxeo-generic-wss-handler-*" />
    </move>
  </target>
  
  <target name="clean">
    <delete dir="${stagedir}" />
  </target>

  <target name="cleanall">
    <delete dir="${outdir}" />
  </target>

</project>
